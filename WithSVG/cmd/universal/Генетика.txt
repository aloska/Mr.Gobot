Генетика для простейших алгоритмов, заданных 2-мя диплоидными хромосомами

Построение первых популяций
===========================
Генерация организма
-------------------
Сначала генерится 1 хромосома, назовем ее M (Male)  и затем генерится  к ней очень близкая, случайно измененная только в некоторых местах. 
Эта вторая будет считаться материнской F (Female).
Эти гомологичные хромосомы совместно вырабатывают алгоритмы таким образом, что:
Первый ген читается c M хромосомы, затем управление передается хромосоме F и читается 2-ой ген, начиная с поиска старт-кодона с того же места, где закончился первый ген отца.
Если в отцовском нет стопа - то будет только один алгоритм, а материнская хромосома будет неактивна.
Таким образом подавляются гены одного родителя и используются другого.

Генерация популяций
-------------------
Просто генерируется большое число разнообразных организмов и выставляется на начальном этапе  SpeciesConst (видовая константа) достаточно большой, а константа GenusConst (родовая константа)
достаточно маленькой. Таким образом алгоритмы  скрещивания будут скрещивать виды из разных родов по-началу.


Скрещивание
===========
Мейоз
-----
Перед скрещиванием в процессе отбора происходит условный мейоз:
из одного организма генерится 4 гометы:
1 - только F гомета
2 - только M гомета
кроссинговер:
3 - FM гомета (берется F за основу и из нее случайный ген заменяется на такой же из M, причем вероятность замены больше на конечных генах, чем центральных)
4 - MF гомета (то же что FM, но за основу берется M)
Это происходит со всеми организмами, которые отобраны функцией отбора как лучшие из лучших и случайные из худших

Спаривание
----------
1. выбирается с вероятностью 0.25 одна из гомет у каждого организма 
2. их хромосомы сравниваются мерой Дамерау-Левенштейна или другой. 
3. Если хромосомы (целиком) достаточно похожи (мера меньше равна SpeciesConst), скрещивание происходит успешно, и называется внутривидовым:
	Одна из хромосом в новом организме (случайно) становится F, другая M
4. Если хромосомы совсем не похожи (мера больше чем GenusConst), то они не дают потомства совсем (не могут гибридизироваться)
5. Если хромосомы сравнимы в пределах от SpeciesConst до GenusConst, то они скрещиваются особым образом (гибридизация, внутриродовое скрещивание):
	5.1 Сначала случайно выбирается, кто будет F и M.
	5.2 F делится на 3 приблизительно равные части и М делится также.
	5.3 Для каждой части из F и ему сопряженного из M находится наибольшая общая последовательность (LCS)
		если расстояние LCSEdit меньше для части из F гометы, то для него берется сама его родная часть, а во второй гомете эта часть заменяется на LCS
		и наоборот, а если расстояния равны, то выбирается случайно.
6. В процессе эволюции SpeciesConst	уменьшается, а GenusConst увеличивается понемногу. Однако, если в процессе скрещивания получилось мало прямых потомков (вид вырождается),
то GenusConst увеличивается (понятие вида расширяется). И если совсем не получается гибридов, то уменьшается GenusConst (расстояние между родами уменьшается)

Мутация
-------
1. Мутация при мейозе слаба и происходят в основном в FM и MF
2. Мутация при скрещивании внутривидовом тоже слаба и происходит в основном в F хромосоме
3. Мутация при внутреродовом скрещивании большая и происходит в основном во время замены родного гена хромосомы на LCS-ген


Похожим образом можно сделать для более сложных организмов, геном которых состоит из большего числа хромосом.


Кодирование генов в хромосоме
=============================
Теоритический Генетический код может состоять из любого набора символов Юникод любого размера.

Старт-кодон
-----------
Символ, с которого начинается некий ген в хромосоме, один из трех: ⚢(e2 9a a2), ⚣(e2 9a a3), ⚤(e2 9a a4)

Стоп-кодон
----------
При считывании этого кода м-РНК, транскрипция заканчивается.
Стоп-кодоном является любая руна из набора Unicode Glagolian (\u2c00-\u2c5e), например Ⱑ

Транскрипция и сплайсинг
------------------------
Набор символов между старт и стоп-кодоном транскрибируется на м-РНК (условно) и с ней происходит работа:
1. Из нее вырезаются все 3-байтовые символы. А 4-байтовых символов там нет, так как стоп 4-байтовый.
2. Оставшийся набор символов преобразуется в слайс байтов
Частично транскрипция пересекается с трансляцией, поскольку цельность гена не вполне очевидная вещь

Трансляция
----------
Изготовление белка-алгоритма на рибосоме происходит следующим образом:
1. Берется очередной байт, делится на 43 (количество команд процессора) - так узнается номер команды.
2. Далее массив байтов парсится в соответствии с опрендами команды. Если ожидается номер регистра - то берется 1 байт и делится
на 32 (количество регистров). Если ожидается адрес или константа - берется 8 байт и т.п.
3. Все повторяется для след. команды до конца м-РНК
4. Все байты должны четко умещаться в формат и в конце не должно остаться лишних байт, как и нехватающих с т.зр. синтаксиса.
Если такое происходит, ген считается плохим и из него алгоритм не  создается

Внимание! Если в хромосоме символ перехода на новую строку встретится внутри гена, то ген не будет определен как ген,
поэтому лучшей практикой будет создавать гены по строкам, если они длинные